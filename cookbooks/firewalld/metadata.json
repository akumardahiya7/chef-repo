{"name":"firewalld","version":"1.1.5","description":"Installs/Configures firewalld","long_description":"firewalld LWRP\n==============\n[![Build Status](https://travis-ci.org/rigrassm/firewalld-cookbook.svg?branch=master)][travis]\n[![Cookbook Version](http://img.shields.io/cookbook/v/firewalld.svg)][cookbook]\n\n[travis]: https://travis-ci.org/rigrassm/firewalld-cookbook\n[cookbook]: https://supermarket.chef.io/cookbooks/firewalld\n\n[Firewalld](https://fedoraproject.org/wiki/FirewallD) is the userland interface to dynamically managing a Linux firewall, introduced in Fedora 15 and Centos/RHEL 7.\n\n# Resource Overview\n\nThis `firewalld` cookbook provides three resources for adding and removing  services, ports, and rules.\n\n## interface\n\nThe `firewalld_interface` resource will add a network interface to a zone for the current and permanent configurations. The interface name is a string that should match a network interface on the system. If zone is omitted, default zone will be used.\n\n### Actions\n\n* `:add` - add the interface to the current and permanent configuration.\n* `:change` - change the interface to the current and permanent configuration. (default)\n* `:remove` - remove the interface from the current and permanent configuration.\n\n### Attributes\n\n<table>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Example</th>\n<th>Default</th>\n</tr>\n<tr>\n<td>interface</td>\n<td>(name attribute) the interface to manage</td>\n<td>em1</td>\n<td></td>\n</tr>\n<tr>\n<td>zone</td>\n<td><code>firewalld</code> zone to add or remove interface from</td>\n<td>public</td>\n<td>(none, uses default zone)</td>\n</tr>\n</table>\n\nDefault action, `:change`, associates an interface with a firewall zone:\n\n```ruby\nfirewalld_interface 'em1'\n```\n\nThis will associate the interface em1 with the default zone.\n\n### `:add`\nAdd the interface to _zone_. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_interface 'em1' do\n        action :add\n        zone   'internal'\nend\n```\n\n### `:change`\nAdd the interface to _zone_, and remove it from any other zones it may be associated\nwith. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_interface 'em1' do\n        action :change\n        zone   'internal'\nend\n```\n\n### `:remove`\nRemove the interface from _zone_. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_interface 'em1' do\n        action :remove\n        zone   'internal'\nend\n```\n\n## rich_rule\n\nThe `firewalld_rich_rule` resource allows you to create complex rules directly onto the firewall. It will load the rule into the running config and pass it to `firewalld` with the `--permanent` flag, to persist it after a reload.\n\n### Actions\n\n* `:add` - add the rich rule to the current and permanent configuration\n* `:remove` - remove the rich rule from the current and permanent configuration\n\n### Attributes\n\nThe attributes for `rich_rule` map  directly to the `firewall-cmd (1)` command-line parameters. More can be read here: [Complex Firewall Rules with Rich Language](https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Security_Guide/sec-Using_Firewalls.html#Configuring_Complex_Firewall_Rules_with_the_Rich-Language_Syntax) and *firewalld.richlanguage (5)*.\n\n<table>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Example</th>\n<th>Default</th>\n</tr>\n\n<tr>\n<td>name</td>\n<td>(name attribute) The name of the resource. This is not passed to <code>firewall-cmd</code>.</td>\n<td>ssh_add</td>\n<td></td>\n</tr>\n\n<tr>\n<td>zone</td>\n<td><code>firewalld</code> zone to add or remove port from</td>\n<td>public</td>\n<td>(none, uses default zone)</td>\n</tr>\n\n<tr>\n<td>family</td>\n<td>IP family. Choice of 'ipv4' or 'ipv6'.</td>\n<td>ipv6</td>\n<td>ipv4</td>\n</tr>\n\n<tr>\n<td>source_address</td>\n<td>Limits the origin of a connection attempt to a specific range of IPs.</td>\n<td>192.168.100.5/32</td>\n<td>(none, not limited)</td>\n</tr>\n\n<tr>\n<td>destination_address</td>\n<td>Limits the target of a connection attempt to a specific range of IPs.</td>\n<td>192.168.100.5/32</td>\n<td>(none, not limited)</td>\n</tr>\n\n<tr>\n<td>service_name</td>\n<td>The service name is one of the <code>firewalld</code> provided services. To get a list of the supported services, use <code>firewall-cmd --get-services</code>.</td>\n<td>ssh</td>\n<td></td>\n</tr>\n\n<tr>\n<td>port_number</td>\n<td>Can be a single integer or a port range, for example '5060-5062'. The protocol can be specified. Requires that <code>port_protocol</code> attribute be specified also.</td>\n<td>5060</td>\n<td></td>\n</tr>\n\n<tr>\n<td>port_protocol</td>\n<td>The protocol for the specified port, can be 'tcp' or 'udp'. Requires that <code>port_number</code> attribute be specified also.</td>\n<td>tcp</td>\n<td></td>\n</tr>\n\n<tr>\n<td>log_prefix</td>\n<td>Logs new connection attempts with kernel logging. This will prepend the log lines with this prefix.</td>\n<td>ssh</td>\n<td></td>\n</tr>\n\n<tr>\n<td>log_level</td>\n<td>Can be one of 'emerg', 'alert', 'error', 'warning', 'notice',\n'info', or 'debug'.</td>\n<td>info</td>\n<td></td>\n</tr>\n\n<tr>\n<td>limit_value</td>\n<td>Limits the rate at which logs are written.</td>\n<td>1/m</td>\n<td>1/m - one write per minute</td>\n</tr>\n\n<tr>\n<td>firewall_action</td>\n<td>Can be one of 'accept', 'reject', or 'drop'. This is the behavior by which all traffic that matches the rule will be handled.</td>\n<td>accept</td>\n<td></td>\n</tr>\n\n</table>\n\n\n### `:add`\n\n```ruby\n# This opens the ssh service to ip `192.168.100.5` and logs at a rate of\n# 1 entry per minute with a prefix of ssh on each log entry.\n#\n\nfirewalld_rich_rule \"ssh_add\" do\n  zone 'public'\n  family 'ipv4'\n  source_address '192.168.100.5/32'\n  service_name 'ssh'\n  log_prefix 'ssh'\n  log_level 'info'\n  limit_value '1/m'\n  firewall_action 'accept'\n  action :add\nend\n```\n\n## service\n\nThe `firewalld_service` resource will add the service for a zone to the current and permanent configurations. The service name is one of the `firewalld` provided services. To get a list of the supported services, use `firewall-cmd --get-services`. If zone is omitted, default zone will be used.\n\n### Actions\n\n* `:add` - add the service to the current and permanent configuration\n* `:remove` - remove the service from the current and permanent configuration\n\n### Attributes\n\n<table>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Example</th>\n<th>Default</th>\n</tr>\n<tr>\n<td>service</td>\n<td>(name attribute) the service to manage</td>\n<td>http</td>\n<td></td>\n</tr>\n<tr>\n<td>zone</td>\n<td><code>firewalld</code> zone to add or remove service from</td>\n<td>public</td>\n<td>(none, uses default zone)</td>\n</tr>\n</table>\n\nDefault action adds a service to the firewall:\n\n```ruby\nfirewalld_service 'http'\n```\n\nThis will allow access to the http service in the default zone.\n\n#### `:add`\nAdd the service to _zone_. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_service 'tftp' do\n\taction :add\n\tzone   'public'\nend\n```\n\n#### `:remove`\nRemoves the service from _zone_. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_service 'telnet' do\naction :remove\nzone   'public'\nend\n```\n\n## port\n\nThe `firewalld_port` resource will add the port for a zone to the current and permanent configurations. If zone is omitted, default zone will be used.\n\n### Actions\n\n* `:add` - add the port to the current and permanent configuration\n* `:remove` - remove the port from the current and permanent configuration\n\n### Attributes\n\n<table>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Example</th>\n<th>Default</th>\n</tr>\n<tr>\n<td>port</td>\n<td>(name attribute) the port to manage</td>\n<td>993/tcp</td>\n<td></td>\n</tr>\n<tr>\n<td>zone</td>\n<td><code>firewalld</code> zone to add or remove port from</td>\n<td>public</td>\n<td>(none, uses default zone)</td>\n</tr>\n</table>\n\nDefault action adds a port to the firewall:\n\n```ruby\nfirewalld_port '993/tcp'\n```\n\nThis will allow access to TCP port 993 in the default zone.\n\n#### `:add`\nAdd the port to _zone_. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_port '993/tcp' do\n  action :add\n  zone   'public'\nend\n```\n\n#### `:remove`\nRemoves the port from _zone_. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_port '993/tcp' do\n\taction :remove\n\tzone   'public'\nend\n```\n\n## zone\n\nThe `firewalld_zone` resource will add a firewalld zone for current and permanent configurations.\n\n### Actions\n\n* `:create` - Default. Use to create a zone. If a zone already exists (but does not match), use to update that zone to match.\n* `:create_if_missing` - Use to create a zone only if the zone does not exist.\n* `:delete` - Use to delete a zone.\n\n### Attributes\n\n<table>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Example</th>\n<th>Default</th>\n</tr>\n<tr>\n<td>zone</td>\n<td>(name attribute) the zone name manage</td>\n<td>external</td>\n<td></td>\n</tr>\n<tr>\n<td>default</td>\n<td>Use to make zone the default zone.</td>\n<td>true</td>\n<td>nil</td>\n</tr>\n<tr>\n<td>target</td>\n<td>Default firewall target. May be one of \"default\", \"ACCEPT\", \"DROP\", or \"%%REJECT%%\".</td>\n<td>ACCEPT</td>\n<td>default</td>\n</tr>\n</table>\n\nDefault action, `:change`, associates an interface with a firewall zone:\n\n```ruby\nfirewalld_source '192.168.100.0/24'\n```\n\nThis will associate the source IP address range \"192.168.100.0/24\" with the default zone.\n\n### `:add`\nAdd the source to _zone_. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_source '192.168.0.0/24' do\n        action :add\n        zone   'internal'\nend\n```\n\n### `:change`\nAdd the source to _zone_, and remove it from any other zones it may be associated\nwith. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_source '192.168.0.0/24' do\n        action :change\n        zone   'internal'\nend\n```\n\n### `:remove`\nRemove the interface from _zone_. If zone is omitted, default zone will be used.\n\n```ruby\nfirewalld_interface '192.168.0.0/24' do\n        action :remove\n        zone   'internal'\nend\n```\n## source\n\nThe `firewalld_source` resource will add a source network address range to a zone for the current and permanent configurations. The source name is a network address in CIDR notation such as \"192.168.100.0/24\". If zone is omitted, default zone will be used.\n\n### Actions\n\n* `:add` - add the source to the current and permanent configuration.\n* `:change` - change the source to the current and permanent configuration. (default)\n* `:remove` - remove the source from the current and permanent configuration.\n\n### Attributes\n\n<table>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Example</th>\n<th>Default</th>\n</tr>\n<tr>\n<td>source</td>\n<td>(name attribute) the network subnet specification manage</td>\n<td>em1</td>\n<td></td>\n</tr>\n<tr>\n<td>zone</td>\n<td><code>firewalld</code> zone to add or remove source from</td>\n<td>public</td>\n<td>(none, uses default zone)</td>\n</tr>\n</table>\n\nDefault action, `:create`, creates or updates a zone:\n\n```ruby\nfirewalld_zone 'database'\n```\n\nThis will create a new firewalld zone called \"database\".\n\n### `:create`\nCreate or update the zone.\n\n```ruby\nfirewalld_zone 'secure' do\n  action :create\n  target 'DROP'\n  default true\nend\n```\n\n### `:create_if_missing`\nCreate the zone only if it does not exist.\n\n```ruby\nfirewalld_zone 'database' do\n  action :create_if_missing\n  target 'DROP'\nend\n```\n\n### `:delete`\nDelete the zone.\n\n```ruby\nfirewalld_zone 'secure' do\n        action :delete\nend\n```\n\n## masquerade\n\nThe `firewalld_masquerade` resource will add the masquerading option to a zone. If zone is omitted, default zone will be used. This is equivalent to `firewall-cmd --zone=public --add-masquerade` or `firewall-cmd --zone=public --remove-masquerade`.\n\n### Actions\n\n* `:add` - add the masquerade option to the current and permanent configuration. (default)\n* `:remove` - remove the masquerade option from the current and permanent configuration.\n\n### Attributes\n\n<table>\n<tr>\n<th>Attribute</th>\n<th>Description</th>\n<th>Example</th>\n<th>Default</th>\n</tr>\n<tr>\n<td>zone</td>\n<td><code>firewalld</code> zone to add or remove masquerade</td>\n<td>public</td>\n<td>(none, uses default zone)</td>\n</tr>\n</table>\n\nDefault action, `:add`, adds the masquerade option to a zone:\n\n```ruby\nfirewalld_masquerade 'public'\n```\n\nThis will add the masquerade option to the \"public\" firewalld zone.\n\n### `:add`\nAdd masquerade to a zone.\n\n```ruby\nfirewalld_masquerade 'add masquerading to public zone' do\n  action :add\n  zone 'public'\nend\n```\n\n### `:remove`\nRemove masquerade from a zone.\n\n```ruby\nfirewalld_masquerade 'remove masquerading from public zone' do\n  action :remove\n  zone 'public'\nend\n```\n\n# Recipes\n\n* default - installs and enables `firewalld`.\n* disable - disable `firewalld` and use `iptables` if `node[:firewalld][:iptables_fallback]` is set.\n* enable - revert to `firewalld` if `node[:firewalld][:iptables_fallback]` is set.\n\n# Usage\n\nIf you're using [Berkshelf](http://berkshelf.com/), just add `firewalld` to your\n`Berksfile` and `metadata.rb`:\n\n```ruby\n# Berksfile\ncookbook 'firewalld'\n\n# metadata.rb\ndepends 'firewalld'\n```\n\nContributing\n------------\n1. Fork the project\n2. Create a feature branch corresponding to you change\n3. Commit and test thoroughly\n4. Create a Pull Request on github\n\n\nLicense & Authors\n-----------------\n- Author:: Jeff Hutchison <jeff@jeffhutchison.com>\n- Author:: Manuel Toledo   <mtoledo@adobe.com>\n- Author:: Johnathan Kupferer   <jtk@uic.edu>\n\n```text\nCopyright 2015, Jeff Hutchison\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Ricky Grassmuck","maintainer_email":"rigrassm@gmail.com","license":"Apache v2.0","platforms":{"fedora":">= 15.0","centos":">= 7.0","rhel":">= 7.0","ubuntu":">= 14.04","debian":">= 8.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{}}